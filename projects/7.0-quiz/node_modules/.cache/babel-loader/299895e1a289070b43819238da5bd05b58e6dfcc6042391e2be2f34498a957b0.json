{"ast":null,"code":"var _jsxFileName = \"/home/code-thulo/Learn/React/React-Journey/projects/7.0-quiz/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Error from './Error';\nimport Loader from './Loader';\nimport { useEffect, useReducer } from 'react';\nimport StartScreen from '../StartScreen';\nimport { Questions } from './Questions';\nimport NextButton from './NextButton';\nimport Progress from './Progress';\nimport FinishScreen from \"./FinishScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n  highscore: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"finish\":\n      return {\n        ...state,\n        status: \"finished\",\n        highscore\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points,\n    highscore\n  }, dispatch] = useReducer(reducer, initialState);\n  const numQuestions = questions.length;\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(function () {\n    fetch(\"http://localhost:8000/questions\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numQuestions: numQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 32\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          index: index,\n          numQuestions: numQuestions,\n          points: points,\n          maxPossiblePoints: maxPossiblePoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Questions, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          dispatch: dispatch,\n          answer: answer,\n          index: index,\n          numQuestions: numQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), status === 'finished' && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        points: points,\n        maxPossiblePoints: maxPossiblePoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UI9L7A9xvE83DtSgn/kKgoHP0Zw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Error","Loader","useEffect","useReducer","StartScreen","Questions","NextButton","Progress","FinishScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","highscore","reducer","state","action","type","payload","question","at","correctOption","App","_s","dispatch","numQuestions","length","maxPossiblePoints","reduce","prev","cur","fetch","then","res","json","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/code-thulo/Learn/React/React-Journey/projects/7.0-quiz/src/components/App.js"],"sourcesContent":["import '../App.css';\nimport Header from './Header';\nimport Main from './Main'\nimport Error from './Error'\nimport Loader from './Loader'\nimport { useEffect, useReducer } from 'react';\nimport StartScreen from '../StartScreen';\nimport { Questions } from './Questions';\nimport NextButton from './NextButton';\nimport Progress from './Progress';\nimport FinishScreen from \"./FinishScreen\";\n\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n  highscore:0\n\n}\n\nfunction reducer(state, action) {\n\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      }\n\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      }\n\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      }\n\n    case \"newAnswer\":\n      const question = state.questions.at(state.index)\n      return {\n        ...state,\n        answer: action.payload,\n        points:\n          action.payload === question.correctOption ? state.points + question.points : state.points,\n      }\n\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      }\n\n    case \"finish\":\n      return {\n        ...state,\n        status: \"finished\",\n        highscore\n      }\n\n\n    default:\n      throw new Error(\"Action unknown\")\n\n  }\n}\n\n\nfunction App() {\n\n\n  const [{ questions, status, index, answer, points,highscore }, dispatch] = useReducer(reducer, initialState);\n  const numQuestions = questions.length;\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0)\n\n  useEffect(function () {\n\n    fetch(\"http://localhost:8000/questions\")\n      .then((res) => res.json())\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\n\n\n  }, [])\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Main>\n\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"ready\" && <StartScreen numQuestions={numQuestions} dispatch={dispatch} />}\n        {status === \"active\" &&\n          (\n            <>\n              <Progress\n                index={index}\n                numQuestions={numQuestions}\n                points={points}\n                maxPossiblePoints={maxPossiblePoints}\n                answer={answer}\n\n              />\n\n\n              <Questions\n                question={questions[index]}\n                dispatch={dispatch}\n                answer={answer}\n              />\n\n              <NextButton\n                dispatch={dispatch}\n                answer={answer}\n                index={index}\n                numQuestions={numQuestions}\n\n\n              />\n\n            </>\n          )}\n        {status === 'finished' &&\n          (<FinishScreen points={points}\n            maxPossiblePoints={maxPossiblePoints} />)\n        }\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}